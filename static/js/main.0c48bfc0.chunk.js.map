{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-actions.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","saveContact","createAction","deleteContact","changeFilter","Form","useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","reset","checkContactIdentity","find","contact","toLowerCase","alertIdentity","alert","nameID","shortid","generate","numberID","className","s","form","onSubmit","event","preventDefault","newContact","id","undefined","label","htmlFor","input","type","value","pattern","title","required","onChange","e","target","formBtn","Filter","filterValue","filter","filterLabel","filterInput","onBlur","ContactItem","phoneNumber","contactListItem","deleteContactBtn","onClick","ContactList","filterWord","filteredContacts","includes","contactList","map","App","itemsReducer","createReducer","action","payload","filterReducer","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","whitelist","rootReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0c48bfc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__sMvqy\",\"filterInput\":\"Filter_filterInput__2dFcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactItem_contactListItem__2HXUo\",\"deleteContactBtn\":\"ContactItem_deleteContactBtn__4Sa1i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__17s1G\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const saveContact = createAction('phonebook/save');\r\nexport const deleteContact = createAction('phonebook/delete');\r\nexport const filterContacts = createAction('phonebook/filter');\r\nexport const changeFilter=createAction('phonebook/changeFilter')\r\n\r\n ","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport shortid from 'shortid';\n\nimport { saveContact } from '../../redux/phonebook/phonebook-actions';\n\nimport s from './Form.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const onSubmitAddContact = event => {\n    event.preventDefault();\n    const contactID = shortid.generate();\n    const newContact = {\n      id: contactID,\n      name,\n      number,\n    };\n\n    if (checkContactIdentity() === undefined) {\n      dispatch(saveContact(newContact));\n      reset();\n    } else {\n      alertIdentity(name);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkContactIdentity = () => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const alertIdentity = name => {\n    alert(`${name} is already in your contacts!`);\n    reset();\n  };\n\n  const nameID = shortid.generate();\n  const numberID = shortid.generate();\n\n  return (\n    <form className={s.form} onSubmit={onSubmitAddContact}>\n      <label className={s.label} htmlFor={nameID}>\n        Name\n      </label>\n      <input\n        id={nameID}\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={e => setName(e.target.value)}\n      />\n      <label className={s.label} htmlFor={numberID}>\n        Number\n      </label>\n      <input\n        id={numberID}\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={e => setNumber(e.target.value)}\n      />\n      <button className={s.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filterValue = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filterLabel}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filterValue}\n        className={s.filterInput}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        onBlur={e => dispatch(changeFilter(''))}\n      />\n    </label>\n  );\n}\n","import {  useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactItem.module.css';\n\nexport default function ContactItem({ id, name, phoneNumber }) {\n  const dispatch = useDispatch();\n  return (\n    <li className={s.contactListItem}>\n      <p>\n        {name}: <span>{phoneNumber}</span>\n      </p>\n      <button\n        className={s.deleteContactBtn}\n        type=\"button\"\n        onClick={()=>dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\n\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(state => state.contacts.items);\n  const filterWord = useSelector(state => state.contacts.filter);\n  \n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterWord.toLowerCase()),\n  );\n\n  return (\n    <ul className={s.contactList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          phoneNumber={number}          \n        />\n      ))}\n    </ul>\n  );\n}\n","import Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </>\n  );\n}\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {saveContact, deleteContact, changeFilter } from './phonebook-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [saveContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),  \r\n})\r\n  \r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, action) => action.payload,\r\n})\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n})\r\n","import { configureStore ,combineReducers} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nimport { contactsReducer } from './phonebook/phonebook-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'savedContacts',\r\n  storage,\r\n  whitelist: ['items']\r\n}\r\n\r\nconst rootReducer=combineReducers({\r\n    contacts:persistReducer(contactsPersistConfig, contactsReducer)\r\n  })\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n})\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3gnDr\",\"label\":\"Form_label__3I5kx\",\"input\":\"Form_input__h2x9p\",\"formBtn\":\"Form_formBtn__1YwuI\"};"],"sourceRoot":""}